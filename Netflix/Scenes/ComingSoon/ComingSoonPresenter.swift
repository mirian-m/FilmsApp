//
//  ComingSoonPresenter.swift
//  Netflix
//
//  Created by Admin on 9/2/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ComingSoonPresentationLogic {
    func presentUpcomingMovies(response: ComingSoon.GetUpcomingMovies.Response)
    func presentSelectedMovie(response: ComingSoon.MovieDetail.Response)
}

class ComingSoonPresenter: ComingSoonPresentationLogic {
    
    weak var viewController: ComingSoonDisplayLogic?
    
    // MARK: Do something
    
    func presentUpcomingMovies(response: ComingSoon.GetUpcomingMovies.Response) {
        guard let upcomingMovies = response.movies, response.error == nil else { return }
        let viewModel = ComingSoon.GetUpcomingMovies.ViewModel(movie: convert(model: upcomingMovies))
        viewController?.displayUpcomingMovies(viewModel: viewModel)
    }
    
    func convert(model: Movies) -> [MovieViewModel] {
        var movieViewModel = [MovieViewModel]()
        
        model.details.forEach { movieDetails in
            let movieModel = MovieViewModel(
                title: movieDetails.original_title ?? movieDetails.title ?? "unknown Film",
                posterUrl: movieDetails.poster_path ?? "",
                id: movieDetails.id ?? -1)
            
            movieViewModel.append(movieModel)
        }
        return movieViewModel
    }
    
    func presentSelectedMovie(response: ComingSoon.MovieDetail.Response) {
        viewController?.displaySelectedMovie(viewModel: ComingSoon.MovieDetail.ViewModel())
    }

}
