//
//  DetailsViewController.swift
//  Netflix
//
//  Created by Admin on 9/8/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailsDisplayLogic: AnyObject {
    func displayMovieDetails(viewModel: Details.GetMovie.ViewModel)
}

class DetailsViewController: UIViewController {
    
    //  MARK:- Clean Components
    var interactor: DetailsBusinessLogic?
    var router: (NSObjectProtocol & DetailsRoutingLogic & DetailsDataPassing)?
    
    private var movieViewModel = MovieViewModel()
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = DetailsInteractor()
        let presenter = DetailsPresenter()
        let router = DetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        getMovieDetails()
    }
    
    
    func getMovieDetails() {
        let request = Details.GetMovie.Request()
        interactor?.doSomething(request: request)
    }
}

extension DetailsViewController: DetailsDisplayLogic {
    func displayMovieDetails(viewModel: Details.GetMovie.ViewModel) {
        self.movieViewModel = viewModel.movieViewModel
    }
}
