//
//  WatchedListPresenter.swift
//  Netflix
//
//  Created by Admin on 9/7/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WatchedListPresentationLogic {
    func presentWatchedMovies(response: WatchedList.GetWatchedMovies.Response)
    func presentSelectedMovie(response: WatchedList.GetSelectedMovie.Response)
}

class WatchedListPresenter {
    weak var viewController: WatchedListDisplayLogic?
    
    // MARK: Do something
//    private func convert(model: [MovieDetails]) -> [MovieViewModel] {
//        var viewModel = [MovieViewModel]()
//        model.forEach { movieDetail in
//            let model = MovieViewModel(with: movieDetail)
//            viewModel.append(model)
//        }
//        return viewModel
//    }
}

extension WatchedListPresenter: WatchedListPresentationLogic {
    func presentSelectedMovie(response: WatchedList.GetSelectedMovie.Response) {
        viewController?.displaySelectedMovie(viewModel: WatchedList.GetSelectedMovie.ViewModel())
    }
    func presentWatchedMovies(response: WatchedList.GetWatchedMovies.Response) {
        let viewModel = WatchedList.GetWatchedMovies.ViewModel(watchedMoviesModel: response.movies?.convert() ?? [])
        viewController?.displayWatchedMovies(viewModel: viewModel)
    }

}
