//
//  BottomSheetViewController.swift
//  Netflix
//
//  Created by Admin on 9/16/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BottomSheetDisplayLogic: AnyObject {}

final class BottomSheetViewController: UIViewController, BottomSheetDisplayLogic {
    
    //  MARK:- Clean components
    var interactor: BottomSheetBusinessLogic?
    var router: (NSObjectProtocol & BottomSheetRoutingLogic & BottomSheetDataPassing)?
    
    private lazy var bottomSheet = BottomSheetCustomView(frame: CGRect(x: 0, y: 0, width: self.view.frame.width, height: self.view.frame.height))
    
    //  MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    //  MARK: Setup
    private func setup() {
        let viewController = self
        let interactor = BottomSheetInteractor()
        let presenter = BottomSheetPresenter()
        let router = BottomSheetRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    //  MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        NotificationCenter.default.addObserver(self, selector: #selector(dismissController), name: Notification.Name("Dismiss"), object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(dismissController), name: .yesButtonWasClickedOnTheBottomSheet, object: nil)
        self.view.addSubview(bottomSheet)
    }
    
    //  MARK:- Notification Center selector Mathod
    @objc private func dismissController() {
        router?.routeBack(segue: nil)
    }
}
