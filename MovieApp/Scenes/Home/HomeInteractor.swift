//
//  HomeInteractor.swift
//  Netflix
//
//  Created by Admin on 8/22/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func fetchMovies(request: Home.MovieInfo.Request)
    func getSelectedMovieDetails(requset: Home.GetSelectedMovie.Request)
}

protocol HomeDataStore {
    var selectedMovieId: Int { get set }
}

final class HomeInteractor: HomeDataStore {
    var selectedMovieId: Int = 0
    var presenter: HomePresentationLogic?
    var worker = APIWoker()
    private var fetchedMovies: Movies = Movies(details: [])
    
}
// MARK: HomeBusinessLogic Metods
extension HomeInteractor: HomeBusinessLogic {
    
    //  MARK:- Get movies
    func fetchMovies(request: Home.MovieInfo.Request) {
        
        //  MARK:- Create url By movies type
        let url = ApiHelper.shared.getMovieUrl(by: request.sectionTitle)
        var response = Home.MovieInfo.Response(error: nil, section: request.section, movies: nil)
        worker.fetchMovieDataBy(url: url, completion: { (result: Result<Movies, APICollerError>) in
            DispatchQueue.main.async { [weak self] in
                switch result {
                case .success(let movies):
                    response.movies = movies
                    self?.fetchedMovies.details.append(contentsOf: movies.details)
                case .failure(let error):
                    response.error = error
                }
                self?.presenter?.presentMovies(response: response)
            }
        })
    }
    
    //  MARK:- Get selected movies
    func getSelectedMovieDetails(requset: Home.GetSelectedMovie.Request) {
        selectedMovieId = requset.selectedMovieId
        presenter?.presentSelectedMovie(response: Home.GetSelectedMovie.Response())
    }
    
}
