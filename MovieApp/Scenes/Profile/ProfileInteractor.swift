//
//  ProfileInteractor.swift
//  Netflix
//
//  Created by Admin on 9/16/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProfileBusinessLogic {
    func getUserData(request: Profile.GetUserData.Request)
    func updateProfileImage(request: Profile.UpdateProfileImage.Request)
    func saveProfileImage(request:Profile.SaveProfileImage.Request)
}

protocol ProfileDataStore {}

final class ProfileInteractor: ProfileBusinessLogic, ProfileDataStore {
    
    
    var presenter: ProfilePresentationLogic?
    var worker = ProfileWorker()
    
    //  MARK: Get user data from firebase data base
    func getUserData(request: Profile.GetUserData.Request) {
        UserManger.shared.getSigInUserData { userData in
            DispatchQueue.main.async { [weak self] in
                let response = Profile.GetUserData.Response(userData: userData)
                self?.presenter?.presentUserDetails(response: response)
            }
        }
    }
    
    func updateProfileImage(request: Profile.UpdateProfileImage.Request) {
        guard let image = request.info[UIImagePickerController.InfoKey.editedImage] as? UIImage else { return }
        presenter?.presentProfileImage(response: Profile.UpdateProfileImage.Response(image: image))
    }
    
    func saveProfileImage(request: Profile.SaveProfileImage.Request) {
        self.worker.saveImageToFireBaseStorage(image: request.image) { [weak self] error in
            if error == nil {
            } else {
                DispatchQueue.main.async {
                    self?.presenter?.presentSaveError(response: Profile.SaveProfileImage.Response(error: error))
                    
                }
            }
        }
    }
}

